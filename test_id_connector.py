import osimport timeimport codecsimport uuid# Fonctions de test pour vérifier le système d'IDdef test_id_communication():    """    Test du système de communication avec ID entre Python et MetaTrader 5    """    # Chemins des fichiers    mt5_path = os.path.expanduser("~/.wine/drive_c/Program Files/MetaTrader 5/MQL5/Files")    request_file = os.path.join(mt5_path, "requests.txt")    response_file = os.path.join(mt5_path, "responses.txt")    encoding = 'latin-1'    # Nettoyer le fichier de réponse    with codecs.open(response_file, 'w', encoding=encoding) as f:        f.write("READY")    print("Fichier de réponse réinitialisé à 'READY'")        # Attendre que l'EA soit prêt    time.sleep(2)    # Test 1: Commande PING avec ID    command_id = str(uuid.uuid4())[:8]    command = f"ID:{command_id}|PING"    with codecs.open(request_file, 'w', encoding=encoding) as f:        f.write(command)    print(f"Test 1: Commande envoyée: '{command}'")    # Attendre et lire la réponse    print("Attente de la réponse...")    start_time = time.time()    while time.time() - start_time < 10:        if os.path.exists(response_file):            with codecs.open(response_file, 'r', encoding=encoding, errors='ignore') as f:                response = f.read().strip()                if response and response != "READY":                    print(f"Réponse complète reçue: '{response}'")                                        # Vérifier si la réponse contient l'ID                    if response.startswith("ID:") and "|" in response:                        parts = response.split("|", 1)                        response_id = parts[0][3:]                        content = parts[1]                        print(f"ID reçu: {response_id}, Contenu: {content}")                                                if response_id == command_id:                            print("✅ L'ID correspond: le système avec ID fonctionne correctement!")                        else:                            print("❌ L'ID ne correspond pas: problème avec le système d'ID.")                    else:                        print("❌ Format de réponse incorrect: l'EA avec ID n'est pas correctement chargé.")                    break        time.sleep(0.5)    else:        print("❌ Timeout: aucune réponse reçue.")        # Réinitialiser pour le test suivant    with codecs.open(response_file, 'w', encoding=encoding) as f:        f.write("READY")    time.sleep(2)        # Test 2: Commande PRICE avec ID    command_id = str(uuid.uuid4())[:8]    command = f"ID:{command_id}|PRICE US30.cash"    with codecs.open(request_file, 'w', encoding=encoding) as f:        f.write(command)    print(f"\nTest 2: Commande envoyée: '{command}'")    # Attendre et lire la réponse    print("Attente de la réponse...")    start_time = time.time()    while time.time() - start_time < 10:        if os.path.exists(response_file):            with codecs.open(response_file, 'r', encoding=encoding, errors='ignore') as f:                response = f.read().strip()                if response and response != "READY":                    print(f"Réponse complète reçue: '{response}'")                                        # Vérifier si la réponse contient l'ID                    if response.startswith("ID:") and "|" in response:                        parts = response.split("|", 1)                        response_id = parts[0][3:]                        content = parts[1]                        print(f"ID reçu: {response_id}, Contenu: {content}")                                                if response_id == command_id:                            print("✅ L'ID correspond: le système avec ID fonctionne correctement!")                        else:                            print("❌ L'ID ne correspond pas: problème avec le système d'ID.")                    else:                        print("❌ Format de réponse incorrect: l'EA avec ID n'est pas correctement chargé.")                    break        time.sleep(0.5)    else:        print("❌ Timeout: aucune réponse reçue.")if __name__ == "__main__":    test_id_communication()