import osfrom src.agents.execution.mt5_connector import MT5FileConnectorimport codecsimport time# Créez une instance et testez la connexionconnector = MT5FileConnector()print("Envoi de la commande PING...")# Modifiez les cheminsmt5_path = os.path.expanduser("~/.wine/drive_c/Program Files/MetaTrader 5/MQL5/Files")connector.request_file = os.path.join(mt5_path, "requests.txt")connector.response_file = os.path.join(mt5_path, "responses.txt")print(f"Chemin du fichier de requête mis à jour: {connector.request_file}")print(f"Chemin du fichier de réponse mis à jour: {connector.response_file}")# Créer manuellement les fichiers avec le bon encodagetry:    # Vérifier si les fichiers existent    if os.path.exists(connector.response_file):        print("Lecture du fichier de réponse...")        try:            with codecs.open(connector.response_file, 'r', encoding='latin-1', errors='ignore') as f:                content = f.read().strip()                print(f"Contenu du fichier de réponse: '{content}'")        except Exception as e:            print(f"Erreur lors de la lecture du fichier: {e}")        # Écrire le fichier de requête avec encodage ANSI/Latin-1    print("Écriture de la commande PING dans le fichier de requête...")    with codecs.open(connector.request_file, 'w', encoding='latin-1') as f:        f.write("PING")        print("Attente de la réponse...")    # Attendre quelques secondes    for i in range(10):        print(f"Tentative {i+1}/10...")        time.sleep(1)                try:            if os.path.exists(connector.response_file):                with codecs.open(connector.response_file, 'r', encoding='latin-1', errors='ignore') as f:                    response = f.read().strip()                    print(f"Réponse lue: '{response}'")                    if response and response != "READY":                        print("Réponse valide reçue!")                        break        except Exception as e:            print(f"Erreur lors de la lecture: {e}")    except Exception as e:    print(f"Erreur générale: {e}")