import osimport timeimport codecsimport uuid  # Importez le module uuid# Chemins des fichiers (assurez-vous qu'ils sont corrects)mt5_path = os.path.expanduser("~/.wine/drive_c/Program Files/MetaTrader 5/MQL5/Files")request_file = os.path.join(mt5_path, "requests.txt")response_file = os.path.join(mt5_path, "responses.txt")# Fonction pour envoyer une commande et attendre la réponse (avec UUID)def send_command(cmd, timeout=10):    command_id = str(uuid.uuid4())[:8]  # Générer un UUID court (8 caractères)    tagged_command = f"ID:{command_id}|{cmd}"  # Ajouter l'ID à la commande    print(f"Envoi de la commande: '{tagged_command}'")    # Écrire la commande dans le fichier de requête    with codecs.open(request_file, 'w', encoding='latin-1') as f:        f.write(tagged_command)    # Attendre la réponse avec le bon ID    start_time = time.time()    while time.time() - start_time < timeout:        if os.path.exists(response_file):            with codecs.open(response_file, 'r', encoding='latin-1', errors='ignore') as f:                response = f.read().strip()                # Vérifier si la réponse commence par "ID:" et contient l'ID correct                if response.startswith(f"ID:{command_id}|"):                    # Extraire la partie de la réponse après l'ID                    content = response.split("|", 1)[1]  # Divise en 2 parties max                    print(f"Réponse reçue (ID: {command_id}): '{content}'")                    return content        time.sleep(0.1)  # Vérifier plus fréquemment    print(f"Timeout après {timeout} secondes (ID: {command_id})")    return None# Tests (sans pause inutile)print("\nTest 1: PING")response = send_command("PING")if response:    print(f"  Réponse: {response}")print("\nTest 2: PRICE US30.cash")response = send_command("PRICE US30.cash")if response:    print(f"  Réponse: {response}")print("\nTest 3: ACCOUNT_INFO")response = send_command("ACCOUNT_INFO")if response:    print(f"  Réponse: {response}")print("\nTest 4: POSITIONS")response = send_command("POSITIONS")if response:    print(f"  Réponse: {response}")